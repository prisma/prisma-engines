datasource pg1 {
  provider = "postgresql"
  url      = "postgresql://"
}

generator foo {
  provider = "bar"
}

model User {
  id        Int      @id
  createdAt DateTime
  email     String   @unique
  name      String?
  posts     Post[]   @relation("author")
  profile   Profile?

  @@map("user")
}

model Profile {
  id     Int    @id
  userId Int    @unique
  user   User   @relation(fields: [userId], references: [id])
  bio    String

  @@map("profile")
}

model Post {
  id         Int
  createdAt  DateTime
  updatedAt  DateTime
  title      String           @default("Default-Title")
  wasLiked   Boolean          @default(false)
  published  Boolean          @default(false)
  authorId   Int
  author     User             @relation("author", fields: [authorId], references: [id])
  categories PostToCategory[]

  @@id([title, createdAt])
  @@map("post")
}

model Category {
  id    Int              @id
  name  String
  posts PostToCategory[]
  cat   CategoryEnum

  @@map("category")
}

model PostToCategory {
  id            Int      @id
  postTitle     String
  postCreatedAt DateTime
  categoryId    Int
  post          Post     @relation(fields: [postTitle, postCreatedAt], references: [title, createdAt])
  category      Category @relation(fields: [categoryId], references: [id])

  @@unique([postTitle, categoryId])
  @@map("post_to_category")
}

model A {
  id  Int @id
  bId Int @unique
  b   B   @relation(fields: [bId], references: [id])
}

model B {
  id Int @id
  a  A?
}

model NamedCompounds {
  a Int
  b Int
  c Int
  d Int

  @@id([a, b], name: "MyPrimary", map: "DbPrimary")
  @@unique([c, d], name: "MyUnique", map: "DbUnique")
}

model MappedSingles {
  a Int @id(map: "Primary")
  b Int @unique(map: "Unique")
}

enum CategoryEnum {
  A
  B
  C
}
