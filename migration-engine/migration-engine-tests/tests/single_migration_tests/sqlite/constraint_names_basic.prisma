// tags=sqlite

datasource db {
    provider = "sqlite"
    url = env("TEST_DATABASE_URL")
}

model A {
  id   Int    @id
  name String @unique(map: "SingleUnique")
  a    String
  b    String
  B    B[]    @relation("AtoB")
  @@unique([a, b], name: "compound", map:"NamedCompoundUnique")
  @@unique([a, b], map:"UnNamedCompoundUnique")
  @@index([a], map: "SingleIndex")
}

model B {
  a   String
  b   String
  aId Int
  A   A      @relation("AtoB", fields: [aId], references: [id])
  @@index([a,b], map: "CompoundIndex")
  @@id([a, b])
}

// -- CreateTable
// CREATE TABLE "A" (
//     "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
//     "name" TEXT NOT NULL,
//     "a" TEXT NOT NULL,
//     "b" TEXT NOT NULL
// );
// 
// -- CreateTable
// CREATE TABLE "B" (
//     "a" TEXT NOT NULL,
//     "b" TEXT NOT NULL,
//     "aId" INTEGER NOT NULL,
// 
//     PRIMARY KEY ("a", "b"),
//     CONSTRAINT "B_aId_fkey" FOREIGN KEY ("aId") REFERENCES "A" ("id") ON DELETE RESTRICT ON UPDATE CASCADE
// );
// 
// -- CreateIndex
// CREATE UNIQUE INDEX "SingleUnique" ON "A"("name");
// 
// -- CreateIndex
// CREATE INDEX "SingleIndex" ON "A"("a");
// 
// -- CreateIndex
// CREATE UNIQUE INDEX "NamedCompoundUnique" ON "A"("a", "b");
// 
// -- CreateIndex
// CREATE UNIQUE INDEX "UnNamedCompoundUnique" ON "A"("a", "b");
// 
// -- CreateIndex
// CREATE INDEX "CompoundIndex" ON "B"("a", "b");
