// tags=mssql

datasource testds {
    provider = "sqlserver"
    url = env("TEST_DATABASE_URL")
    schemas = ["publicschema", "security", "users"]
}

generator js {
    provider = "prisma-client-js"
    previewFeatures = ["multiSchema"]
}

model Test {
  id Int @id
  name String
  @@unique([name])
  @@schema("users")
}

model Test2 {
  id Int @id
  @@schema("publicschema")
}

model Test3 {
  id Int @id
  @@schema("security")
}

model Test4 {
  id Int @id
  test5 Test5 @relation(fields: [id], references: [id])
  @@schema("publicschema")
}

model Test5 {
  id Int @id
  test4 Test4[]
  @@schema("security")
}


// BEGIN TRY
// 
// BEGIN TRAN;
// 
// -- CreateSchema
// EXEC sp_executesql N'CREATE SCHEMA [publicschema];';;
// 
// -- CreateSchema
// EXEC sp_executesql N'CREATE SCHEMA [security];';;
// 
// -- CreateSchema
// EXEC sp_executesql N'CREATE SCHEMA [users];';;
// 
// -- CreateTable
// CREATE TABLE [users].[Test] (
//     [id] INT NOT NULL,
//     [name] NVARCHAR(1000) NOT NULL,
//     CONSTRAINT [Test_pkey] PRIMARY KEY CLUSTERED ([id]),
//     CONSTRAINT [Test_name_key] UNIQUE NONCLUSTERED ([name])
// );
// 
// -- CreateTable
// CREATE TABLE [publicschema].[Test2] (
//     [id] INT NOT NULL,
//     CONSTRAINT [Test2_pkey] PRIMARY KEY CLUSTERED ([id])
// );
// 
// -- CreateTable
// CREATE TABLE [security].[Test3] (
//     [id] INT NOT NULL,
//     CONSTRAINT [Test3_pkey] PRIMARY KEY CLUSTERED ([id])
// );
// 
// -- CreateTable
// CREATE TABLE [publicschema].[Test4] (
//     [id] INT NOT NULL,
//     CONSTRAINT [Test4_pkey] PRIMARY KEY CLUSTERED ([id])
// );
// 
// -- CreateTable
// CREATE TABLE [security].[Test5] (
//     [id] INT NOT NULL,
//     CONSTRAINT [Test5_pkey] PRIMARY KEY CLUSTERED ([id])
// );
// 
// -- AddForeignKey
// ALTER TABLE [publicschema].[Test4] ADD CONSTRAINT [Test4_id_fkey] FOREIGN KEY ([id]) REFERENCES [security].[Test5]([id]) ON DELETE NO ACTION ON UPDATE CASCADE;
// 
// COMMIT TRAN;
// 
// END TRY
// BEGIN CATCH
// 
// IF @@TRANCOUNT > 0
// BEGIN
//     ROLLBACK TRAN;
// END;
// THROW
// 
// END CATCH
