name: Introspection Engine + Migration Engine + sql_schema_describer
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  test-mongodb-introspection-and-migration-connector:
    name: "Test ${{ matrix.database.name }} on Linux"
    strategy:
      fail-fast: false
      matrix:
        database:
          - name: "mongodb4"
            url: "mongodb://prisma:prisma@localhost:27017/?authSource=admin&retryWrites=true"
          - name: "mongodb5"
            url: "mongodb://prisma:prisma@localhost:27018/?authSource=admin&retryWrites=true"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: "Start ${{ matrix.database.name }}"
        run: make start-${{ matrix.database.name }}-single

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true

      # - uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.cargo/registry
      #       ~/.cargo/git
      #       target
      #     key: me-ie-ubuntu-latest-mongodb-cargo-${{ hashFiles('**/Cargo.lock') }}

      - run: cargo test -p mongodb-introspection-connector
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}

      - run: cargo test -p mongodb-migration-connector
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}

  test-linux:
    name: "Test ${{ matrix.database.name }} on Linux"

    strategy:
      fail-fast: false
      matrix:
        database:
          - name: mssql_2017
            url: "sqlserver://localhost:1434;database=master;user=SA;password=<YourStrong@Passw0rd>;trustServerCertificate=true;socket_timeout=60;isolationLevel=READ UNCOMMITTED"
            single_threaded: true
          - name: mssql_2019
            url: "sqlserver://localhost:1433;database=master;user=SA;password=<YourStrong@Passw0rd>;trustServerCertificate=true;socket_timeout=60;isolationLevel=READ UNCOMMITTED"
            single_threaded: true
          - name: mysql_5_6
            url: "mysql://root:prisma@localhost:3309"
          - name: mysql_5_7
            url: "mysql://root:prisma@localhost:3306"
          - name: mysql_8
            url: "mysql://root:prisma@localhost:3307"
          - name: mysql_mariadb
            url: "mysql://root:prisma@localhost:3308"
          - name: postgres9
            url: "postgresql://postgres:prisma@localhost:5431"
          - name: postgres10
            url: "postgresql://postgres:prisma@localhost:5432"
          - name: postgres11
            url: "postgresql://postgres:prisma@localhost:5433"
          - name: postgres12
            url: "postgresql://postgres:prisma@localhost:5434"
          - name: postgres13
            url: "postgresql://postgres:prisma@localhost:5435"
          - name: postgres14
            url: "postgresql://postgres:prisma@localhost:5437"
          - name: cockroach
            url: "postgresql://root@localhost:26257"
            is_cockroach: true
          - name: sqlite
            url: sqlite
          - name: vitess_5_7
            url: "mysql://root:prisma@localhost:33577/test"
            shadow_database_url: "mysql://root:prisma@localhost:33578/shadow"
            is_vitess: true
            single_threaded: true
          - name: vitess_8_0
            url: "mysql://root:prisma@localhost:33807/test"
            shadow_database_url: "mysql://root:prisma@localhost:33808/shadow"
            is_vitess: true
            single_threaded: true

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: "Start ${{ matrix.database.name }}"
        run: make start-${{ matrix.database.name }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true

      # - uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.cargo/registry
      #       ~/.cargo/git
      #       target
      #     key: me-ie-${{ runner.os }}-${{ matrix.database.name }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - run: cargo test -p introspection-engine-tests
        if: ${{ !matrix.database.single_threaded }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}

      - run: cargo test -p sql-schema-describer
        if: ${{ !matrix.database.single_threaded }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}

      - run: cargo test -p migration-engine-tests
        if: ${{ !matrix.database.is_cockroach && !matrix.database.single_threaded }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}
          RUST_LOG: debug

      - run: cargo test -p migration-engine-cli
        if: ${{ !matrix.database.is_cockroach && !matrix.database.single_threaded }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}

      - run: cargo test -p introspection-engine-tests -- --test-threads=1
        if: ${{ matrix.database.is_vitess }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}
          TEST_SHADOW_DATABASE_URL: ${{ matrix.database.shadow_database_url }}

      - run: cargo test -p migration-engine-tests -- --test-threads=1
        if: ${{ matrix.database.is_vitess }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}
          TEST_SHADOW_DATABASE_URL: ${{ matrix.database.shadow_database_url }}
          RUST_LOG: debug

      - run: cargo test -p migration-engine-cli -- --test-threads=1
        if: ${{ matrix.database.is_vitess }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}
          TEST_SHADOW_DATABASE_URL: ${{ matrix.database.shadow_database_url }}

      - run: cargo test -p sql-schema-describer -- --test-threads=1
        if: ${{ !matrix.database.is_vitess && matrix.database.single_threaded }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}

      - run: cargo test -p introspection-engine-tests -- --test-threads=1
        if: ${{ !matrix.database.is_vitess && matrix.database.single_threaded }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}

      - run: cargo test -p migration-engine-tests -- --test-threads=1
        if: ${{ !matrix.database.is_vitess && matrix.database.single_threaded }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}
          RUST_LOG: debug

      - run: cargo test -p migration-engine-cli -- --test-threads=1
        if: ${{ !matrix.database.is_vitess && matrix.database.single_threaded }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}

  test-windows:
    strategy:
      fail-fast: false
      matrix:
        db:
          - name: mysql
            url: "mysql://root@localhost:3306?connect_timeout=20&socket_timeout=60"
          - name: mariadb
            url: "mysql://root@localhost:3306?connect_timeout=20&socket_timeout=60"
        rust:
          - stable
        os:
          - windows-latest

    runs-on: ${{ matrix.os }}

    name: "Test ${{ matrix.db.name }} on Windows"

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{matrix.rust}}

      # - uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.cargo/registry
      #       ~/.cargo/git
      #       target
      #     key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}

      - uses: MinoruSekine/setup-scoop@main

      - name: Install ${{ matrix.db.name }}
        run: |
          scoop install sudo
          scoop install ${{ matrix.db.name }}
          sudo mysqld --install
          sudo sc start MySQL

      - name: Run tests
        run: cargo test -p migration-engine-tests
        env:
          TEST_DATABASE_URL: ${{ matrix.db.url }}
