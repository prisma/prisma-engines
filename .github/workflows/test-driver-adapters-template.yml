name: "QE: driver-adapter integration tests"
on:
  workflow_call:
    inputs:
      setup_task:
        type: string
        required: true

jobs:
  rust-query-engine-tests:
    name: "${{ matrix.partition }}"

    strategy:
      fail-fast: false
      matrix:
        node_version: ["18"]
        partition: ["1/4", "2/4", "3/4", "4/4"]
    env:
      LOG_LEVEL: "info" # Set to "debug" to trace the query engine and node process running the driver adapter
      LOG_QUERIES: "y"
      RUST_LOG: "info"
      RUST_LOG_FORMAT: "devel"
      RUST_BACKTRACE: "1"
      CLICOLOR_FORCE: "1"
      CLOSED_TX_CLEANUP: "2"
      SIMPLE_TEST_MODE: "1"
      QUERY_BATCH_SIZE: "10"
      WASM_BUILD_PROFILE: "profiling" # Include debug info for proper backtraces
      WORKSPACE_ROOT: ${{ github.workspace }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # using head ref rather than merge branch to get original commit message
          ref: ${{ github.event.pull_request.head.sha }}
      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}

      - name: "Setup pnpm"
        uses: pnpm/action-setup@v4.0.0
        with:
          version: 9

      - name: "Login to Docker Hub"
        uses: docker/login-action@v3
        continue-on-error: true
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        if: "${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}"
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Branch Name
        id: extract-branch
        run: |
          echo "Extracting branch name from: $(git show -s --format=%s)"
          branch="$(git show -s --format=%s | grep -o "DRIVER_ADAPTERS_BRANCH=[^ ]*" | cut -f2 -d=)"
          echo "branch=$branch"
          if [ -n "$branch" ]; then
            echo "Using $branch branch of driver adapters"
            echo "DRIVER_ADAPTERS_BRANCH=$branch" >> "$GITHUB_ENV"
          fi

      - uses: ./.github/workflows/include/rust-wasm-setup
      - uses: taiki-e/install-action@nextest

      - name: Setup
        env:
          SETUP_TASK: ${{ inputs.setup_task }}
        run: make "$SETUP_TASK"

      - name: "Run tests"
        env:
          PARTITION: ${{ matrix.partition }}
        run: cargo nextest run --package query-engine-tests --test-threads=1 --partition hash:"$PARTITION"
