name: Build and publish Prisma Driver Adapters
run-name: npm - release Driver Adapters ${{ github.event.inputs.prismaVersion }} from ${{ github.event.inputs.enginesHash }} on ${{ github.event.inputs.npmDistTag }}

concurrency: publish-prisma-driver-adapters

on:
  # usually triggered via GH Actions Workflow in prisma/prisma repo
  workflow_dispatch:
    inputs:
      enginesHash:
        description: Engine commit hash to checkout for publishing
        required: true
      prismaVersion:
        description: Prisma version to use for publishing
        required: true
      npmDistTag:
        description: npm dist-tag to use for publishing
        required: true
        default: 'latest'
      dryRun:
        description: 'Check to do a dry run (does not publish packages)'
        type: boolean

jobs:
  build:
    name: Build and publish Prisma Driver Adapters
    runs-on: ubuntu-latest
    steps:
      - name: Print input
        env:
          THE_INPUT: '${{ toJson(github.event.inputs) }}'
        run: |
          echo $THE_INPUT

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.enginesHash }}

      - uses: pnpm/action-setup@v2.4.0
        with:
          version: 8

      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: pnpm i
        working-directory: query-engine/driver-adapters/js

      - name: Build
        run: pnpm -r build
        working-directory: query-engine/driver-adapters/js

      - name: Update version in package.json
        run: |
          # find all files package.json, and for each use jq to write the version, then write to temp file and overwrite original file with result
          find . -name "package.json" -exec bash -c 'jq --arg version "${{ github.event.inputs.prismaVersion }}" ".version = \$version" "{}" > tmpfile && mv tmpfile "{}"' \;
        working-directory: query-engine/driver-adapters/js

      - name: Publish Prisma Driver Adapters packages
        run: |
          pnpm -r publish --no-git-checks --tag ${{ github.event.inputs.npmDistTag }} ${{ env.DRY_RUN }}
        working-directory: query-engine/driver-adapters/js
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          DRY_RUN: ${{ github.event.inputs.dryRun == 'true' && '--dry-run' || '' }}

      #
      # Failure handlers
      #

      - name: Set current job url in SLACK_FOOTER env var
        if: ${{ failure() }}
        run: echo "SLACK_FOOTER=<$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID|Click here to go to the job logs>" >> $GITHUB_ENV
      - name: Slack Notification on Failure
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2.2.1
        env:
          SLACK_TITLE: 'prisma driver adapters publishing failed :x:'
          SLACK_COLOR: '#FF0000'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_DRIVER_ADPATERS_FAILING }}
