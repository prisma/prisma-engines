name: Driver Adapters
on:
  push:
    branches:
      - main
  pull_request:
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/query-engine-driver-adapters.yml'
      - '.buildkite/**'
      - '*.md'
      - 'LICENSE'
      - 'CODEOWNERS'
      - 'renovate.json'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rust-query-engine-tests:
    name: 'Test `${{ matrix.adapter.name }}` on node v${{ matrix.node_version }}'

    strategy:
      fail-fast: false
      matrix:
        adapter:
          - name: 'pg'
            setup_task: 'dev-pg-postgres13'
          - name: 'neon:ws'
            setup_task: 'dev-neon-ws-postgres13'
          - name: 'libsql'
            setup_task: 'dev-libsql-sqlite'
          - name: 'planetscale'
            setup_task: 'dev-planetscale-vitess8'
        node_version: ['18']
    env:
      LOG_LEVEL: 'info' # Set to "debug" to trace the query engine and node process running the driver adapter
      LOG_QUERIES: 'y'
      RUST_LOG: 'info'
      RUST_LOG_FORMAT: 'devel'
      RUST_BACKTRACE: '1'
      CLICOLOR_FORCE: '1'
      CLOSED_TX_CLEANUP: '2'
      SIMPLE_TEST_MODE: '1'
      QUERY_BATCH_SIZE: '10'
      WORKSPACE_ROOT: ${{ github.workspace }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 'Setup Node.js'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}

      - name: 'Setup pnpm'
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: 'Get pnpm store directory'
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: 'Login to Docker Hub'
        uses: docker/login-action@v3
        continue-on-error: true
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        if: "${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}"
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - run: make ${{ matrix.adapter.setup_task }}

      - uses: dtolnay/rust-toolchain@stable

      - name: 'Run tests'
        run: cargo test --package query-engine-tests -- --test-threads=1
