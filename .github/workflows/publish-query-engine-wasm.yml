name: Build and publish @prisma/query-engine-wasm
run-name: npm - release @prisma/query-engine-wasm@${{ github.event.inputs.enginesWrapperVersion }} from ${{ github.event.inputs.enginesHash }} on ${{ github.event.inputs.npmDistTag }}

concurrency: publish-query-engine-wasm

on:
  # usually triggered via GH Actions Workflow in prisma/engines-wrapper repo
  workflow_dispatch:
    inputs:
      packageVersion:
        required: true
        description: 'New @prisma/query-engine-wasm package version'
        default: '0.6.2-integration-test-workflow.1' # TODO: delete me
      enginesHash:
        required: true
        description: 'prisma-engines commit to build'
        default: '8ddef72bc25a5133915fd788494b660ef2565e8f' # TODO: delete me
      npmDistTag:
        required: true
        # default: 'latest' # TODO: uncomment me
        description: 'npm dist-tag (e.g. latest or integration)'
        default: 'integration' # TODO: delete me
  push: # TODO: delete me
    branches: # TODO: delete me
      - ci-add-gh-actions-workflow-for-query-engine-wasm-publishing # TODO: delete me

jobs:
  build:
    name: Build and publish @prisma/query-engine-wasm
    runs-on: ubuntu-latest
    steps:
      - name: Print input
        run: echo ${{ toJson(github.event.inputs) }}

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.enginesHash }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install wasm-pack
        run: cargo install wasm-pack

      - name: Build @prisma/query-engine-wasm
        run: ./build.sh ${{ github.event.inputs.packageVersion }}
        working-directory: ./query-engine/query-engine-wasm

      - name: Set up NPM token for publishing
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish @prisma/query-engine-wasm
        run: npm publish ./pkg --provenance --access public --tag ${{ github.event.inputs.npmDistTag }}
        working-directory: ./query-engine/query-engine-wasm

      #
      # Failure handlers
      #
      - name: Set current job url in SLACK_FOOTER env var
        if: ${{ failure() }}
        run: echo "SLACK_FOOTER=<$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID|Click here to go to the job logs>" >> $GITHUB_ENV
      - name: Slack Notification on Failure
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2.2.1
        env:
          SLACK_TITLE: 'query-engine-wasm publishing failed :x:'
          SLACK_COLOR: '#FF0000'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_WASM_FAILING }}
