name: Schema Engine
on:
  push:
    branches:
      - main
  pull_request:
    paths-ignore:
      # Generic
      - '.buildkite/**'
      - '*.md'
      - 'LICENSE'
      - 'CODEOWNERS'
      - 'renovate.json'
      # Specific
      - 'query-engine/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-mongodb-schema-connector:
    name: "Test ${{ matrix.database.name }} on Linux"
    strategy:
      fail-fast: false
      matrix:
        database:
          - name: "mongodb42"
            url: "mongodb://prisma:prisma@localhost:27016/?authSource=admin&retryWrites=true"
          - name: "mongodb44"
            url: "mongodb://prisma:prisma@localhost:27017/?authSource=admin&retryWrites=true"
          - name: "mongodb5"
            url: "mongodb://prisma:prisma@localhost:27018/?authSource=admin&retryWrites=true"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        continue-on-error: true
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Start ${{ matrix.database.name }}"
        run: make start-${{ matrix.database.name }}-single

      - run: cargo test -p mongodb-schema-connector
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}

  test-linux:
    name: "Test ${{ matrix.database.name }} on Linux"

    strategy:
      fail-fast: false
      matrix:
        database:
          - name: yugabyte
            url: "postgresql://yugabyte:yugabyte@localhost:5433"

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        continue-on-error: true
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Start ${{ matrix.database.name }}"
        run: make start-${{ matrix.database.name }}

      - run: cargo test -p sql-introspection-tests
        if: ${{ !matrix.database.single_threaded }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}

      - run: cargo test -p sql-schema-describer
        if: ${{ !matrix.database.single_threaded }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}

      - run: cargo test -p sql-migration-tests
        if: ${{ !matrix.database.single_threaded }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}
          RUST_LOG: debug

      - run: cargo test -p schema-engine-cli
        if: ${{ !matrix.database.single_threaded }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}

      - run: cargo test -p sql-introspection-tests -- --test-threads=1
        if: ${{ matrix.database.is_vitess }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}
          TEST_SHADOW_DATABASE_URL: ${{ matrix.database.shadow_database_url }}

      - run: cargo test -p sql-migration-tests -- --test-threads=1
        if: ${{ matrix.database.is_vitess }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}
          TEST_SHADOW_DATABASE_URL: ${{ matrix.database.shadow_database_url }}
          RUST_LOG: debug

      - run: cargo test -p schema-engine-cli -- --test-threads=1
        if: ${{ matrix.database.is_vitess }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}
          TEST_SHADOW_DATABASE_URL: ${{ matrix.database.shadow_database_url }}

      - run: cargo test -p sql-schema-describer -- --test-threads=1
        if: ${{ !matrix.database.is_vitess && matrix.database.single_threaded }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}

      - run: cargo test -p sql-introspection-tests -- --test-threads=1
        if: ${{ !matrix.database.is_vitess && matrix.database.single_threaded }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}

      - run: cargo test -p sql-migration-tests -- --test-threads=1
        if: ${{ !matrix.database.is_vitess && matrix.database.single_threaded }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}
          RUST_LOG: debug

      - run: cargo test -p schema-engine-cli -- --test-threads=1
        if: ${{ !matrix.database.is_vitess && matrix.database.single_threaded }}
        env:
          CLICOLOR_FORCE: 1
          TEST_DATABASE_URL: ${{ matrix.database.url }}

  test-windows:
    strategy:
      fail-fast: false
      matrix:
        db:
          - name: mysql
            url: "mysql://root@localhost:3306?connect_timeout=20&socket_timeout=60"
          - name: mariadb
            url: "mysql://root@localhost:3306?connect_timeout=20&socket_timeout=60"
        rust:
          - stable
        os:
          - windows-latest

    runs-on: ${{ matrix.os }}

    name: "Test ${{ matrix.db.name }} on Windows"

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install ${{ matrix.db.name }}
        run: |
          iwr -useb 'https://raw.githubusercontent.com/scoopinstaller/install/master/install.ps1' -outfile 'install.ps1'
          .\install.ps1 -RunAsAdmin

          scoop install sudo
          scoop install ${{ matrix.db.name }}
          sudo mysqld --install
          sudo sc start MySQL

      - name: Run tests
        run: cargo test -p sql-migration-tests
        env:
          TEST_DATABASE_URL: ${{ matrix.db.url }}
