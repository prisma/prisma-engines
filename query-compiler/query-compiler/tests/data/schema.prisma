generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("TEST_POSTGRES_URI")
}

enum Role {
  USER  @map("user")
  ADMIN @map("admin")
}

model User {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  role        Role         @default(USER)
  posts       Post[]
  activations Activation[]
}

model Employee {
  id        Int        @id @default(autoincrement())
  manager   Employee?  @relation(name: "EmployeeManager", fields: [managerId], references: [id])
  managerId Int?
  managed   Employee[] @relation(name: "EmployeeManager")
}

model UserWithGenerators {
  id        String   @id @default(uuid(7))
  email     String   @unique
  createdAt DateTime @default(now())
}

model Post {
  id         Int        @id @default(autoincrement())
  title      String
  userId     Int
  user       User       @relation(fields: [userId], references: [id])
  categories Category[]
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[]
}

model ParentModelWithCompositeId {
  a        Int
  b        Int
  children ChildOfModelWithCompositeId[]

  @@id([a, b])
}

model ChildOfModelWithCompositeId {
  id      Int                        @id
  parent  ParentModelWithCompositeId @relation(fields: [parentA, parentB], references: [a, b])
  parentA Int
  parentB Int
}

model Activation {
  id     Int      @id @default(autoincrement())
  issued DateTime @default(now())
  secret String
  done   Boolean
  userId Int
  user   User     @relation(fields: [userId], references: [id])
}

model Item {
  id    String @id @default(cuid())
  float Float  @map("db_float")
  int   Int    @map("db_int")
}

model DataTypes {
  id        Bytes   @id
  optString String?
  intArray  Int[]
}
